"use strict";(self.webpackChunkguidelines=self.webpackChunkguidelines||[]).push([[588],{1372:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var t=s(4848),i=s(8453);const o={sidebar_position:2},c="Braces(backets) scoping",r={id:"conventions/braces",title:"Braces(backets) scoping",description:"Braces must always be placed in a new line. Braces on the same line as definitions are not the C++ standard.",source:"@site/docs/conventions/braces.md",sourceDirName:"conventions",slug:"/conventions/braces",permalink:"/guidelines/docs/conventions/braces",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Functions and Methods naming",permalink:"/guidelines/docs/conventions/functions"},next:{title:"Constants and Variable Types",permalink:"/guidelines/docs/conventions/types"}},a={},d=[{value:"exemple:",id:"exemple",level:4}];function l(e){const n={code:"code",h1:"h1",h4:"h4",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"bracesbackets-scoping",children:"Braces(backets) scoping"})}),"\n",(0,t.jsx)(n.p,{children:"Braces must always be placed in a new line. Braces on the same line as definitions are not the C++ standard."}),"\n",(0,t.jsx)(n.h4,{id:"exemple",children:"exemple:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"struct Bar\n{\n};\n\nclass Foo\n{\n};\n\n[[noreturn]] void someFunction(uint32_t idx)\n{\n    if(idx > 50)\n    {\n        idx = 10;\n    }\n\n    do\n    {\n        --idx;\n    } while(idx > 0);\n\n    for(;;)\n    {\n        // do something.\n    }\n\n}\n\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var t=s(6540);const i={},o=t.createContext(i);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);