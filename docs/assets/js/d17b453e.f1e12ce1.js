"use strict";(self.webpackChunkguidelines=self.webpackChunkguidelines||[]).push([[556],{4498:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=o(4848),d=o(8453);const a={sidebar_position:1},i="Header File Dependencies",s={id:"header_files/dependencies",title:"Header File Dependencies",description:"Do not include other headers whenever a forward declaration would suffice.",source:"@site/docs/header_files/dependencies.md",sourceDirName:"header_files",slug:"/header_files/dependencies",permalink:"/guidelines/docs/header_files/dependencies",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"#define guard",permalink:"/guidelines/docs/header_files/header_guards"},next:{title:"Names and Order of Includes",permalink:"/guidelines/docs/header_files/naming_and_order"}},c={},l=[{value:"For example, we have the class Foo decalred in foo.h and we need a reference for Foo in class Bar:",id:"for-example-we-have-the-class-foo-decalred-in-fooh-and-we-need-a-reference-for-foo-in-class-bar",level:4},{value:"Wrong way",id:"wrong-way",level:4},{value:"Correct way",id:"correct-way",level:4}];function t(e){const n={code:"code",h1:"h1",h4:"h4",header:"header",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"header-file-dependencies",children:"Header File Dependencies"})}),"\n",(0,r.jsxs)(n.p,{children:["Do not include other headers whenever a forward declaration would suffice.\nWhen including header dependencies, you may introduce cyclic dependencies. Complete type definitions should be\nincluded in the relative ",(0,r.jsx)(n.code,{children:".cpp"})," file whenever possible."]}),"\n",(0,r.jsx)(n.h4,{id:"for-example-we-have-the-class-foo-decalred-in-fooh-and-we-need-a-reference-for-foo-in-class-bar",children:"For example, we have the class Foo decalred in foo.h and we need a reference for Foo in class Bar:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"// In foo.h\nclass Foo\n{\n    ...\n    public:\n    void someMethod();\n};\n"})}),"\n",(0,r.jsx)(n.h4,{id:"wrong-way",children:"Wrong way"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'// In bar.h\n#include "foo.h" // There is no need to include since we do not use it directly.\n\nclass Bar\n{\n    Foo &foo;\n    Bar(Foo &);\n};\n\n// In bar.cpp\nBar::Bar(Foo &foo)\n{\n    foo.someMethod();\n};\n'})}),"\n",(0,r.jsx)(n.h4,{id:"correct-way",children:"Correct way"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'// In bar.h\nclass Bar\n{\n    class Foo &foo; // Forward declaration to Foo\n    Bar(Foo &);\n};\n\n// In bar.cpp\n#include "foo.h" // We include Foo here since we will need its full definition.\n\nBar::Bar(Foo &foo)\n{\n    foo.someMethod();\n};\n\n'})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>s});var r=o(6540);const d={},a=r.createContext(d);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);